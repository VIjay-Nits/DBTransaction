
package dbtransaction;

import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.sql.*;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vijay
 */
public class TransactionGUI extends javax.swing.JFrame {

    /**
     * Creates new form TransactionGUI
     */
//    public TransactionGUI() {
//        
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        runPaneFE = new javax.swing.JScrollPane();
        runTableFE = new javax.swing.JTable();
        historyPaneFE = new javax.swing.JScrollPane();
        historyTableFE = new javax.swing.JTable();
        taskPaneFE = new javax.swing.JScrollPane();
        taskTableFE = new javax.swing.JTable();
        deletepanelFE = new javax.swing.JPanel();
        DeleteconfirmFE = new javax.swing.JButton();
        deletecomboFE = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        addTaskButtonFE = new javax.swing.JButton();
        deleteTaskButtonFE = new javax.swing.JButton();
        runningTaskButtonFE = new javax.swing.JButton();
        historyButtonFE = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        SchTaskButtonFE = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Data Transaction");
        setBackground(new java.awt.Color(0, 0, 0));

        jLayeredPane1.setBackground(new java.awt.Color(0, 255, 255));

        runTableFE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Task Name", "Source", "Destination", "Source Table Name", "Destination Table Name", "Progress", "Details", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        runPaneFE.setViewportView(runTableFE);

        historyTableFE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Task Name", "Source", "Destination", "Source Table Name", "Destination Table", "Date", "Details", "Status"
            }
        ));
        historyPaneFE.setViewportView(historyTableFE);

        taskTableFE.setAutoCreateRowSorter(true);
        taskTableFE.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        taskTableFE.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        taskTableFE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Task Name", "Source", "Destination", "Source Table Name", "Destination Table Name", "Sch. Date", "Deatils"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        taskTableFE.setEnabled(false);
        taskTableFE.setRowHeight(25);
        taskTableFE.setSurrendersFocusOnKeystroke(true);
        taskPaneFE.setViewportView(taskTableFE);
        taskTableFE.getAccessibleContext().setAccessibleName("");
        taskTableFE.getAccessibleContext().setAccessibleDescription("");

        DeleteconfirmFE.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        DeleteconfirmFE.setText("Delete");
        DeleteconfirmFE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteconfirmFEActionPerformed(evt);
            }
        });

        deletecomboFE.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Select Task:");

        javax.swing.GroupLayout deletepanelFELayout = new javax.swing.GroupLayout(deletepanelFE);
        deletepanelFE.setLayout(deletepanelFELayout);
        deletepanelFELayout.setHorizontalGroup(
            deletepanelFELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deletepanelFELayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(deletepanelFELayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(deletecomboFE, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(deletepanelFELayout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(DeleteconfirmFE))
        );
        deletepanelFELayout.setVerticalGroup(
            deletepanelFELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deletepanelFELayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(deletecomboFE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(DeleteconfirmFE))
        );

        jLayeredPane1.setLayer(runPaneFE, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(historyPaneFE, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(taskPaneFE, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(deletepanelFE, javax.swing.JLayeredPane.PALETTE_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(350, 350, 350)
                .addComponent(deletepanelFE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(413, 413, 413))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(taskPaneFE, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1063, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(runPaneFE, javax.swing.GroupLayout.DEFAULT_SIZE, 1039, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                    .addContainerGap(21, Short.MAX_VALUE)
                    .addComponent(historyPaneFE, javax.swing.GroupLayout.PREFERRED_SIZE, 1030, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(deletepanelFE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(159, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(taskPaneFE, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addComponent(runPaneFE, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addComponent(historyPaneFE, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setAlignmentX(0.0F);

        addTaskButtonFE.setBackground(new java.awt.Color(204, 204, 204));
        addTaskButtonFE.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addTaskButtonFE.setText("Add Task");
        addTaskButtonFE.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        addTaskButtonFE.setMaximumSize(new java.awt.Dimension(65, 25));
        addTaskButtonFE.setMinimumSize(new java.awt.Dimension(65, 25));
        addTaskButtonFE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTaskButtonFEActionPerformed(evt);
            }
        });

        deleteTaskButtonFE.setBackground(new java.awt.Color(204, 204, 204));
        deleteTaskButtonFE.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deleteTaskButtonFE.setText("Delete Task");
        deleteTaskButtonFE.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        deleteTaskButtonFE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteTaskButtonFEActionPerformed(evt);
            }
        });

        runningTaskButtonFE.setBackground(new java.awt.Color(204, 204, 204));
        runningTaskButtonFE.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        runningTaskButtonFE.setText("Running Tasks");
        runningTaskButtonFE.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        runningTaskButtonFE.setMinimumSize(new java.awt.Dimension(101, 25));
        runningTaskButtonFE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runningTaskButtonFEActionPerformed(evt);
            }
        });

        historyButtonFE.setBackground(new java.awt.Color(204, 204, 204));
        historyButtonFE.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        historyButtonFE.setText("History");
        historyButtonFE.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        historyButtonFE.setMaximumSize(new java.awt.Dimension(51, 25));
        historyButtonFE.setMinimumSize(new java.awt.Dimension(51, 25));
        historyButtonFE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historyButtonFEActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(204, 204, 204));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton5.setText("Profile");
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jButton5.setMinimumSize(new java.awt.Dimension(43, 25));

        jButton6.setBackground(new java.awt.Color(204, 204, 204));
        jButton6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton6.setText("Logout");
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jButton6.setMinimumSize(new java.awt.Dimension(51, 25));

        jLabel7.setBackground(new java.awt.Color(0, 102, 204));
        jLabel7.setText("User name");

        SchTaskButtonFE.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        SchTaskButtonFE.setText("Scheduled Tasks");
        SchTaskButtonFE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SchTaskButtonFEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(SchTaskButtonFE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(historyButtonFE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteTaskButtonFE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addTaskButtonFE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(runningTaskButtonFE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 45, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addTaskButtonFE, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(deleteTaskButtonFE, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(historyButtonFE, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SchTaskButtonFE, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(runningTaskButtonFE, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1043, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 210, Short.MAX_VALUE)
                    .addComponent(jLayeredPane1)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.Alignment.TRAILING))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addTaskButtonFEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTaskButtonFEActionPerformed
      AddTask add=new AddTask();
       java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddTask().setVisible(true);
            }
        });
    }//GEN-LAST:event_addTaskButtonFEActionPerformed

    private void SchTaskButtonFEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SchTaskButtonFEActionPerformed
        try {
            deletepanelFE.setVisible(true);
            deletepanelFE.setVisible(false);
            runPaneFE.setVisible(false);
            historyPaneFE.setVisible(false);
            taskPaneFE.setVisible(true);
            new ScheduledTaskList().displaySchTask(taskTableFE);
        } catch (SQLException ex) {
            Logger.getLogger(TransactionGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_SchTaskButtonFEActionPerformed

    private void runningTaskButtonFEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runningTaskButtonFEActionPerformed
              try {    
                    deletepanelFE.setVisible(true);  
                    deletepanelFE.setVisible(false);
                    runPaneFE.setVisible(true);
                    historyPaneFE.setVisible(false);
                    taskPaneFE.setVisible(false);
                    new RunningTaskList().displayRunTask(runTableFE);
                    new RunningTransaction();
                  } catch (SQLException ex) {
            Logger.getLogger(TransactionGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
                        // TODO add your handling code here:
    }//GEN-LAST:event_runningTaskButtonFEActionPerformed

    private void historyButtonFEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historyButtonFEActionPerformed
        try{
            deletepanelFE.setVisible(true);
            deletepanelFE.setVisible(false);
            runPaneFE.setVisible(false);
            historyPaneFE.setVisible(true);
            taskPaneFE.setVisible(false);
            new HistoryTaskList().displayHistoryTask(historyTableFE);
        }catch(SQLException e){
            System.out.println("PROBLEM IN HISTORY TASK LIST 338");
        }
        
    }//GEN-LAST:event_historyButtonFEActionPerformed

    private void deleteTaskButtonFEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteTaskButtonFEActionPerformed
       
       deletepanelFE.setVisible(true);
            runPaneFE.setVisible(false);
            historyPaneFE.setVisible(false);
            taskPaneFE.setVisible(false);
        Vector<String>tasknames=new Vector<>();
        ConnectionDB conn=new ConnectionDB("postgres","postmanager");
        if(conn.isConnectionCreated("PostgreSQL")){
            
            try{
            Connection connection=conn.connection();
            Statement st = connection.createStatement();
           try{ResultSet results = st.executeQuery("SELECT taskname FROM usersdb");
                ResultSetMetaData metadata = results.getMetaData();
                
                int columnCount = metadata.getColumnCount();
// Get the column names; column indices start from 1
            
            while(results.next()){tasknames.add(results.getString("taskname"));}
            connection.close();
            conn.connection().close();
            
            deletecomboFE.setModel(new javax.swing.DefaultComboBoxModel<>(tasknames));
            
           }catch(Exception re){
                JOptionPane.showMessageDialog(null, "Problem with the server connection");
           
            }
            
            
               
            }catch(SQLException e){
                System.out.println("SQL exception");
                Logger.getLogger(AddTask.class.getName()).log(Level.SEVERE, null, e);
            }
         }
    }//GEN-LAST:event_deleteTaskButtonFEActionPerformed

    private void DeleteconfirmFEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteconfirmFEActionPerformed
           Vector<String>tasknames=new Vector<>(); 
        ConnectionDB conn=new ConnectionDB("postgres","postmanager");
        if(conn.isConnectionCreated("PostgreSQL")){
            
            try{
            Connection connection=conn.connection();
            Statement st = connection.createStatement();
            String tname=(String)deletecomboFE.getItemAt(deletecomboFE.getSelectedIndex());
           try{st.executeUpdate("DELETE FROM usersdb WHERE taskname='"+tname+"'");
               ResultSet results = st.executeQuery("SELECT taskname FROM usersdb");
                ResultSetMetaData metadata = results.getMetaData();
                
                int columnCount = metadata.getColumnCount();
// Get the column names; column indices start from 1
            
            while(results.next()){tasknames.add(results.getString("taskname"));}
            connection.close();
            conn.connection().close();
            
            deletecomboFE.setModel(new javax.swing.DefaultComboBoxModel<>(tasknames));
            
           }catch(Exception re){
                JOptionPane.showMessageDialog(null, "Problem with the server connection");
           
            }
            
            
               
            }catch(SQLException e){
                System.out.println("SQL exception");
                Logger.getLogger(AddTask.class.getName()).log(Level.SEVERE, null, e);
            }
        


//       ConnectionDB conn=new ConnectionDB("postgres","postmanager");
//        if(conn.isConnectionCreated("PostgreSQL")){
//            
//            try{
//            Connection connection=conn.connection();
//            Statement st = connection.createStatement();
//           try{ResultSet results = st.executeQuery("SELECT taskname FROM usersdb");
//                ResultSetMetaData metadata = results.getMetaData();
//                
//                int columnCount = metadata.getColumnCount();
//// Get the column names; column indices start from 1
//            
//            while(results.next()){tasknames.add(results.getString("taskname"));}
//            connection.close();
//            conn.connection().close();
//            
//            deletecomboFE.setModel(new javax.swing.DefaultComboBoxModel<>(tasknames));
//            
//           }catch(Exception re){
//                JOptionPane.showMessageDialog(null, "Problem with the server connection");
//           
//            }
//            
//            
//               
//            }catch(SQLException e){
//                System.out.println("SQL exception");
//                Logger.getLogger(AddTask.class.getName()).log(Level.SEVERE, null, e);
//            }
//        
        }
    }//GEN-LAST:event_DeleteconfirmFEActionPerformed
    
    
    
      
    
    
    
    
    
    TransactionGUI()  {
        
        initComponents();
        deletepanelFE.setVisible(false);
            runPaneFE.setVisible(false);
            historyPaneFE.setVisible(false);
            taskPaneFE.setVisible(false);
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransactionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransactionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransactionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransactionGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
    }
 public JTable getTaskTable() {
        return taskTableFE;
    }

    public void setTaskTable(JTable taskTable) {
        this.taskTableFE = taskTable;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteconfirmFE;
    private javax.swing.JButton SchTaskButtonFE;
    private javax.swing.JButton addTaskButtonFE;
    private javax.swing.JButton deleteTaskButtonFE;
    private javax.swing.JComboBox<String> deletecomboFE;
    private javax.swing.JPanel deletepanelFE;
    private javax.swing.JButton historyButtonFE;
    private javax.swing.JScrollPane historyPaneFE;
    private javax.swing.JTable historyTableFE;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JScrollPane runPaneFE;
    private javax.swing.JTable runTableFE;
    private javax.swing.JButton runningTaskButtonFE;
    private javax.swing.JScrollPane taskPaneFE;
    public javax.swing.JTable taskTableFE;
    // End of variables declaration//GEN-END:variables

    public JTable getRunTableFE() {
        return runTableFE;
    }

    public void setRunTableFE(JTable runTableFE) {
        this.runTableFE = runTableFE;
    }

   

    
}

